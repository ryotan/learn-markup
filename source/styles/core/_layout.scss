/*
# Application layout CSS

Organized according to [MVCSS](http://mvcss.github.io/) style.

アプリケーションのLayout (margin,padding,sizing,positioning) を定義するファイル。

レイアウトは、5段階に分けてレスポンシブに配置する。デフォルトは、960〜1280px。
*/
@charset "utf-8";

/*
# 960px ≦ width < 1280px

コンテンツ全体は100%で画面いっぱいに表示する。

ヘッダーとフッターは画面いっぱいに広げて、メイン領域とサイドバーは固定幅にする。

メイン領域とサイドバー領域を横に並べると、バランスよく配置できないから、縦に並べる。

## ヘッダー

ヘッダーは100%で配置する。

ロゴとメニューは横に並べて配置する。

## メイン

メイン領域は960pxで中央に配置する。

## サイドバー

サイドバーは960pxでメイン領域の下に中央に配置する。

## フッター

フッターは100%で配置する。
*/
.page-container {
  display: flex;
  flex-flow: row wrap;

  width: 100%;
}

.header {
  width: 100%;

  .menu-items {
    padding: 0;
  }
}

.main {
  margin: 0 auto;
  width: rem(960);
}

.sidebar {
  margin: 0 auto;
  width: rem(960);
}

.footer {
  width: 100%;
}

/*
# 1280px ≦ width

コンテンツ全体を固定幅で画面中央に配置する。

## ヘッダー

ヘッダーは1280pxで、画面中央に配置する。

## メイン

メイン領域は960pxで、画面左側に配置する。

両側に8pxのpaddingを取る。

## サイドバー

サイドバーは296pxで、メイン領域の右に配置する。

左側に8pxのpaddingを取る。

## フッター

フッターは1280pxで、画面中央に配置する。

*/
@media screen and (min-width: 1300px) {
  .page-container {
    width: rem(1280);
    margin: auto;
  }

  .header {
    width: rem(1280);
  }

  .main {
    width: rem(960);
    padding: 0 rem(8);
  }

  .sidebar {
    width: rem(296);
    padding: 0 0 0 rem(8);
  }

  .footer {
    width: rem(1280);
  }
}
/*
# 640px ≦ width < 960px

  * ヘッダー：100%
  * メイン：100% (margin: 0 0)
  * サイドバー：100% (margin: 0 0)
  * フッター：100%

  indexは記事2列。記事幅は(w-16)/2（両サイドマージンなし）。サイドバーは下で100%。

*/
@media screen and (min-width: 640px) and (max-width: 959px) {
  .page-container {
    width: 100%;
  }

  .header {
    width: 100%;

    .menu-items {
      flex-flow: column;
    }
  }

  .main {
    width: 100%;
  }

  .sidebar {
    width: 100%;
  }

  .footer {
    width: 100%;
  }
}

/*
# 472px ≦ width < 640px

  * ヘッダー：100%
  * メイン：472px (margin: 0 auto)
  * サイドバー：472px (margin: 0 auto)
  * フッター：100%

  indexは記事1列。記事幅は472px（両サイドマージン自動）。サイドバーは下で100%。
*/
@media screen and (min-width: 472px) and (max-width: 639px) {
  .page-container {
    width: 100%;
  }

  .header {
    width: 100%;

    .logo-img {
      display: none;
    }

    .menu-items {
      flex-flow: column;
    }
  }

  .main {
    width: rem(472);
  }

  .sidebar {
    width: rem(472);
  }

  .footer {
    width: 100%;
  }
}

/*
# 320px ≦ width < 472px

  * ヘッダー：100%
  * メイン：100%
  * サイドバー：100%
  * フッター：100%

  indexは記事1列。記事幅は100%（両サイドマージンなし）。サイドバーは下で100%。
*/
@media screen and (max-width: 471px) {
  .page-container {
    width: 100%;
  }

  .header {
    width: 100%;

    .logo-img {
      display: none;
    }

    .menu-items {
      flex-flow: column;
    }
  }

  .main {
    width: 100%;
  }

  .sidebar {
    width: 100%;
  }

  .footer {
    width: 100%;
  }
}


/*------------------------------------*
 * Basic Components
 *------------------------------------*/
/* ---------- Global Header ---------- */
@import "layout/header";

/* ---------- Main ---------- */
//@import "layout/main";

//.main {
//  flex: 1 0 65%;
//  margin: 0 5% 0 0;
//}

/* ---------- Sidebar ---------- */
//@import "layout/sidebar";

//.sidebar {
//  flex: 1 0 30%;
//}

/* ---------- Footer ---------- */
//@import "layout/footer";

//.footer {
//  flex: 1 0 100%;
//}

/*------------------------------------*
 * Card
 *------------------------------------*/


/*------------------------------------*
 * Cell
 *------------------------------------*/


/*------------------------------------*
 * Grid
 *------------------------------------*/


/*------------------------------------*
 * Row
 *------------------------------------*/


/*------------------------------------*
 * Utilities
 *------------------------------------*/
